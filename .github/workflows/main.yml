name: Playwright Tests with Browser Detection

on:
  workflow_dispatch:
    inputs:
      browser:
        description: "Escolher navegador"
        required: true
        default: "chromium"
        type: choice
        options:
          - chromium
          - firefox
          - webkit

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container: mcr.microsoft.com/playwright:v1.54.2-jammy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ github.event.inputs.browser }}

      - name: Setup display for browser (Xvfb)
        run: |
          apt-get update
          apt-get install -y xvfb
          Xvfb :99 -screen 0 1024x768x16 &
          export DISPLAY=:99

      - name: Run Playwright Tests with Browser Detection
        env:
          DEBUG: pw:api
          BROWSER_TYPE: ${{ github.event.inputs.browser }}
        run: |
          # Criar script temporário para detecção de navegador
          cat > browser-detection.js << 'EOF'
          const { chromium, firefox, webkit, expect } = require('@playwright/test');
          
          async function runTestsWithBrowserDetection() {
            const browserType = process.env.BROWSER_TYPE || 'chromium';
            let browser;
            
            console.log(`Iniciando navegador: ${browserType}`);
            
            switch (browserType) {
              case 'firefox':
                browser = await firefox.launch({ headless: false });
                break;
              case 'webkit':
                browser = await webkit.launch({ headless: false });
                break;
              default:
                browser = await chromium.launch({ headless: false });
            }

            console.log(`Aguardando navegador ${browserType} abrir...`);
            
            // Verifica se o navegador foi aberto
            await expect.poll(async () => {
              const pages = browser.contexts().flatMap(context => context.pages());
              return pages.length > 0;
            }, {
              message: 'Navegador não foi aberto dentro do tempo limite',
              timeout: 30000 // 30 segundos
            }).toBeTruthy();

            console.log('Navegador aberto com sucesso! Continuando testes...');
            
            // Executar os testes normais do Playwright
            const { execSync } = require('child_process');
            try {
              execSync('npx playwright test --project=' + browserType + ' --reporter=html --workers=1', { 
                stdio: 'inherit',
                env: { ...process.env, DISPLAY: ':99' }
              });
            } catch (error) {
              console.error('Testes falharam:', error.message);
              process.exit(1);
            } finally {
              await browser.close();
            }
          }

          runTestsWithBrowserDetection().catch(error => {
            console.error('Erro durante execução:', error);
            process.exit(1);
          });
          EOF
          
          # Executar o script de detecção
          node browser-detection.js

      - name: Upload Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7
